% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count-values.R
\name{count_values}
\alias{count_values}
\alias{assert_single_value}
\title{Check for duplicate values}
\usage{
count_values(.data, col, by, setkey = FALSE)

assert_single_value(.data, col, by)
}
\arguments{
\item{.data}{A data frame or data table}

\item{col}{tidy-select. A single column in `.data`}

\item{by}{tidy-select. Columns in `.data`}

\item{setkey}{Logical. Should the output be keyed by `by` cols?}
}
\description{
`count_values()` returns values of `by` variables for which the `.data` has
multiple unique rows, along with the number of unique rows for each
combination of values, only considering columns in `col`

`assert_single_value()` throws an error if there are multiple unique rows for
any combination of `by` variable values, only considering columns in `col`
}
\examples{
\dontrun{
df <- read.table(text = '
x y z
a 1 3
a 1 3
a 2 4
a 2 4
a 2 2
b 1 1
b 1 2
', header = TRUE)

assert_single_value(df, z, by = c(x, y))
#> Error in `assert_single_value()`:
#> ! Column `z` is not unique by `c(x, y)`.
#> •       x     y n_vals
#> •  <char> <int>  <int>
#> •       a     2      2
#> • Use `count_values()` to see all groups with multiple values.

count_values(df, z, by = c(x, y))
#>         x     y n_vals
#>    <char> <int>  <int>
#> 1:      a     2      2
#> 2:      b     1      2
}

}
