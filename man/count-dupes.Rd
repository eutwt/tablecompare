% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count-dupes.R
\name{count_dupes}
\alias{count_dupes}
\alias{assert_unique}
\title{Check for duplicate rows}
\usage{
count_dupes(.data, by, setkey = FALSE)

assert_unique(.data, by, data_chr, by_chr)
}
\arguments{
\item{.data}{A data frame or data table}

\item{by}{tidy-select. Columns in `.data`}

\item{setkey}{Logical. Should the output be keyed by `by` cols?}

\item{data_chr}{optional. character. You can use this argument to manually specify
the name of `data` shown in error messages. Useful when using these functions
as checks inside other functions.}

\item{by_chr}{optional. character. You can use this argument to manually specify
the name of `by` shown in error messages. Useful when using these functions
as checks inside other functions.}
}
\description{
`count_dupes()` returns values of `by` variables for which the `.data` has
multiple rows, along with the number of rows for each combination of values.

`assert_unique()` throws an error if there are multiple rows for any
combination of `by` variable values
}
\examples{
df <- read.table(text = "
x y z
1 6 1
2 6 2
3 7 3
3 7 4
4 3 5
4 3 6
", header = TRUE)

count_dupes(df, c(x, y))
\dontrun{
assert_unique(df, c(x, y))
#> Error in `assert_unique()`:
#> ! Input `df` is not unique by `c(x, y)`.
#> • First duplicate:
#> •  n_rows     x     y
#> •   <int> <int> <int>
#> •       2     3     7
#> • Use `count_dupes()` to see all duplicates.
}

}
