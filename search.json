[{"path":"https://eutwt.github.io/tablecompare/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 tablecompare authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://eutwt.github.io/tablecompare/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ryan Dickerson. Author, maintainer.","code":""},{"path":"https://eutwt.github.io/tablecompare/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dickerson R (2023). tablecompare: Compare Data Frames. R package version 0.1.1, https://github.com/eutwt/tablecompare.","code":"@Manual{,   title = {tablecompare: Compare Data Frames},   author = {Ryan Dickerson},   year = {2023},   note = {R package version 0.1.1},   url = {https://github.com/eutwt/tablecompare}, }"},{"path":[]},{"path":"https://eutwt.github.io/tablecompare/index.html","id":"notice","dir":"","previous_headings":"","what":"Notice:","title":"Compare Data Frames","text":"package longer maintained, replaced versus package.","code":""},{"path":"https://eutwt.github.io/tablecompare/reference/contents.html","id":null,"dir":"Reference","previous_headings":"","what":"Show the contents of a data frame — contents","title":"Show the contents of a data frame — contents","text":"Show contents data frame","code":""},{"path":"https://eutwt.github.io/tablecompare/reference/contents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the contents of a data frame — contents","text":"","code":"contents(.data)"},{"path":"https://eutwt.github.io/tablecompare/reference/contents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show the contents of a data frame — contents","text":".data data frame data table","code":""},{"path":"https://eutwt.github.io/tablecompare/reference/contents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show the contents of a data frame — contents","text":"data.table one row per column .data columns \"column\": name column .data, \"class\": names classes column inherits (returned class()), collapsed single string.","code":""},{"path":"https://eutwt.github.io/tablecompare/reference/contents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show the contents of a data frame — contents","text":"","code":"contents(ToothGrowth) #>    column   class #> 1:   supp  factor #> 2:   dose numeric #> 3:    len numeric"},{"path":"https://eutwt.github.io/tablecompare/reference/count-dupes.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for duplicate rows — count_dupes","title":"Check for duplicate rows — count_dupes","text":"count_dupes() returns values variables .data multiple rows, along number rows combination values. assert_unique() throws error multiple rows combination variable values","code":""},{"path":"https://eutwt.github.io/tablecompare/reference/count-dupes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for duplicate rows — count_dupes","text":"","code":"count_dupes(.data, by, setkey = FALSE)  assert_unique(.data, by, data_chr, by_chr)"},{"path":"https://eutwt.github.io/tablecompare/reference/count-dupes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for duplicate rows — count_dupes","text":".data data frame data table tidy-select. Columns .data setkey Logical. output keyed cols? data_chr optional. character. can use argument manually specify name data shown error messages. Useful using functions checks inside functions. by_chr optional. character. can use argument manually specify name shown error messages. Useful using functions checks inside functions.","code":""},{"path":"https://eutwt.github.io/tablecompare/reference/count-dupes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for duplicate rows — count_dupes","text":"count_dupes() data.table (filtered) columns additional column \"n_rows\" shows number rows .data combination values shown output row. assert_unique() return value. Called throw error depending input.","code":""},{"path":"https://eutwt.github.io/tablecompare/reference/count-dupes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for duplicate rows — count_dupes","text":"","code":"df <- read.table(text = \" x y z 1 6 1 2 6 2 3 7 3 3 7 4 4 3 5 4 3 6 \", header = TRUE)  count_dupes(df, c(x, y)) #>    x y n_rows #> 1: 3 7      2 #> 2: 4 3      2  if (FALSE) { assert_unique(df, c(x, y)) }"},{"path":"https://eutwt.github.io/tablecompare/reference/count-values.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for existence of multiple values per group — count_values","title":"Check for existence of multiple values per group — count_values","text":"count_values() returns values variables .data multiple unique rows, along number unique rows combination values, considering columns col. assert_single_value() throws error multiple unique rows combination variable values, considering columns col.","code":""},{"path":"https://eutwt.github.io/tablecompare/reference/count-values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for existence of multiple values per group — count_values","text":"","code":"count_values(.data, col, by, setkey = FALSE)  assert_single_value(.data, col, by)"},{"path":"https://eutwt.github.io/tablecompare/reference/count-values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for existence of multiple values per group — count_values","text":".data data frame data table col tidy-select. Columns .data. counting number unique rows, columns specified col considered. tidy-select. Columns .data. setkey Logical. output keyed cols?","code":""},{"path":"https://eutwt.github.io/tablecompare/reference/count-values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for existence of multiple values per group — count_values","text":"count_values() data.table (filtered) columns additional column \"n_vals\" shows number unique rows .data combination values shown output row. assert_single_value() return value. Called throw error depending input.","code":""},{"path":"https://eutwt.github.io/tablecompare/reference/count-values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for existence of multiple values per group — count_values","text":"","code":"df <- read.table(text = \" x y z a 1 3 a 1 3 a 2 4 a 2 4 a 2 2 b 1 1 b 1 2 \", header = TRUE)  count_values(df, z, by = c(x, y)) #>    x y n_vals #> 1: a 2      2 #> 2: b 1      2  if (FALSE) { assert_single_value(df, z, by = c(x, y)) }"},{"path":"https://eutwt.github.io/tablecompare/reference/tablecompare-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tablecompare: Compare Data Frames — tablecompare-package","title":"tablecompare: Compare Data Frames — tablecompare-package","text":"Compare two tables","code":""},{"path":[]},{"path":"https://eutwt.github.io/tablecompare/reference/tablecompare-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tablecompare: Compare Data Frames — tablecompare-package","text":"Maintainer: Ryan Dickerson fresh.tent5866@fastmail.com","code":""},{"path":"https://eutwt.github.io/tablecompare/reference/tblcompare.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two data frames. Using a key-column common to both tables, see which\nrows are common and highlight differing values by column. — tblcompare","title":"Compare two data frames. Using a key-column common to both tables, see which\nrows are common and highlight differing values by column. — tblcompare","text":"Compare two data frames. Using key-column common tables, see rows common highlight differing values column.","code":""},{"path":"https://eutwt.github.io/tablecompare/reference/tblcompare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two data frames. Using a key-column common to both tables, see which\nrows are common and highlight differing values by column. — tblcompare","text":"","code":"tblcompare(   .data_a,   .data_b,   by,   allow_bothNA = TRUE,   ncol_by_out = 3,   coerce = TRUE )  value_diffs(comparison, col)  # S3 method for tbcmp_compare value_diffs(comparison, col)  all_value_diffs(comparison)  # S3 method for tbcmp_compare all_value_diffs(comparison)"},{"path":"https://eutwt.github.io/tablecompare/reference/tblcompare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two data frames. Using a key-column common to both tables, see which\nrows are common and highlight differing values by column. — tblcompare","text":".data_a data frame data table .data_b data frame data table tidy-select. Selection columns use matching rows .data_a .data_b. data frames must unique . allow_bothNA Logical. TRUE missing value data frames considered equal ncol_by_out Number -columns include col_diffs unmatched_rows output coerce Logical. False columns class compared. comparison object class \"tbcmp_compare\" (output tablecompare::tablecompare() call) col tidy-select. single column","code":""},{"path":"https://eutwt.github.io/tablecompare/reference/tblcompare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two data frames. Using a key-column common to both tables, see which\nrows are common and highlight differing values by column. — tblcompare","text":"tblcompare() \"tbcmp_compare\"-class object, list data.table`s  following elements: tables data.table one row per input table showing number rows     columns . data.table one row per column showing class     column input tables. summ data.table one row per column common .data_a    .data_b columns \"n_diffs\" showing number values    different two tables, \"class_a\"/\"class_b\" class    column table, \"value_diffs\" (nested) data.table showing    rows input table values unequal, values    table, one column first ncol_by_out columns    identified rows input tables. unmatched_cols data.table one row per column one input table    columns \"table\": table column appears ,    \"column\": name column, \"class\": class    column. unmatched_rows data.table , row present one input table    , contains columns \"table\": table row appears ,    \"\" row number input row, one column first    ncol_by_out columns row. value_diffs() data.table one row element col found unequal input tables ( .data_a .data_b original tblcompare() call) output table columns \"i_a\"/\"i_b\": row number element input tables, \"val_a\"/\"val_b\": value col input tables, one column first ncol_by_out columns identified rows input tables. all_value_diffs() data.table value_diffs() output columns least one value difference, combined row-wise single table. facilitate combination single table, \"val_a\" \"val_b\" columns coerced character.","code":""}]
